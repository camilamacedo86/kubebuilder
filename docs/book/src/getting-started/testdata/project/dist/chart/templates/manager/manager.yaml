apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: project
        control-plane: controller-manager
    name: project-controller-manager
    namespace: {{ .Release.Namespace }}
spec:
    replicas: 1
    selector:
        matchLabels:
            app.kubernetes.io/name: project
            control-plane: controller-manager
    template:
        metadata:
            annotations:
                kubectl.kubernetes.io/default-container: manager
            labels:
                app.kubernetes.io/name: project
                control-plane: controller-manager
        spec:
            containers:
                - args:
                    - --metrics-bind-address=:8443
                    - --leader-elect
                    - --health-probe-bind-address=:8081
                  command:
                    - /manager
                  image: "{{- $image := .Values.controllerManager.image -}}{{ $image.repository }}{{- if $image.digest }}@{{ $image.digest }}{{- else if $image.tag }}:{{ $image.tag }}{{- end }}"
                  livenessProbe:
                    httpGet:
                        path: /healthz
                        port: 8081
                    initialDelaySeconds: 15
                    periodSeconds: 20
                  name: manager
                  ports: []
                  readinessProbe:
                    httpGet:
                        path: /readyz
                        port: 8081
                    initialDelaySeconds: 5
                    periodSeconds: 10
                  resources:
                    limits:
                        cpu: 500m
                        memory: 128Mi
                    requests:
                        cpu: 10m
                        memory: 64Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                        drop:
                            - ALL
                    readOnlyRootFilesystem: true
                  volumeMounts: []
            securityContext:
                runAsNonRoot: true
                seccompProfile:
                    type: RuntimeDefault
            serviceAccountName: project-controller-manager
            terminationGracePeriodSeconds: 10
            volumes: []
